<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>prometheuses on</title><link>https://koktlzz.github.io/prometheus/</link><description>Recent content in prometheuses on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Wed, 04 Nov 2020 09:19:42 +0100</lastBuildDate><atom:link href="https://koktlzz.github.io/prometheus/index.xml" rel="self" type="application/rss+xml"/><item><title>Getting Started</title><link>https://koktlzz.github.io/prometheus/prometheus/intro/</link><pubDate>Wed, 04 Nov 2020 09:19:42 +0100</pubDate><guid>https://koktlzz.github.io/prometheus/prometheus/intro/</guid><description>官方网站 https://prometheus.io/
推荐阅读 官方文档
Thanos - Highly available Prometheus setup with long term storage capabilities</description></item><item><title>Operator 自定义配置</title><link>https://koktlzz.github.io/prometheus/prometheus/operator%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE/</link><pubDate>Wed, 04 Nov 2020 09:19:42 +0100</pubDate><guid>https://koktlzz.github.io/prometheus/prometheus/operator%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE/</guid><description>通常，我们需要对 Prometheus 的监控、告警规则和消息推送进行一些自定义的配置。对于部署在虚拟机的 Prometheus 和 Alertmanager 实例来说，上述配置分别对应以下文件：
prometheus.yaml *-rules.yaml alertmanager.yaml 但如果使用 Operator 在 Kubernetes 或 Openshift 中部署 Prometheus，其 Prometheus 和 Alertmanager 实例由对应的 Operator 负责管理，自然无法通过修改 Pod 挂载的 ConfigMap 或 Secret 来更新配置。因此，我们只能直接修改与其有关的 CRD（Custom Resource Definition）配置。
Prometheus Operator 在集群中创建的 CRD 资源主要有：
Prometheus：管理集群中的 Prometheus StatefulSet 实例； ServiceMonitor：通过 Label Selector 选取需要监控的 Endpoint 对象； Alertmanager：管理集群中的 Alertmanager StatefulSet 实例； PrometheusRule：将告警规则配置动态加载到 Prometheus 实例中。 接下来我们将分别讨论两者之间的对应关系。为了区分 CRD 资源和原生的 Prometheus 概念，文中的 CRD 名称均以斜体表示。
监控 prometheus.yaml的示例文件如下，其中各字段的定义详见 官方文档。
global: scrape_interval: 15s # Set the scrape interval to every 15 seconds.</description></item></channel></rss>